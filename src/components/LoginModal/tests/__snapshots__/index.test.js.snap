// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginModal:index should be hidden when clicked outside the modal 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginModal
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>
          }
        >
          <PopupHeader>
            Sign in details
          </PopupHeader>
          <PopupContent>
            Click here to sign in
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={undefined}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <LoginSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <LoginFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Sign in details
            </PopupHeader>,
            <PopupContent>
              Click here to sign in
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign in
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sign in details",
            },
            "ref": null,
            "rendered": "Sign in details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign in",
            },
            "ref": null,
            "rendered": "Click here to sign in",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": undefined,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>,
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign in",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign in",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Don't have an account?",
                      " ",
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Don't have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign up",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Sign up",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign in
              </Button>
            }
          >
            <PopupHeader>
              Sign in details
            </PopupHeader>
            <PopupContent>
              Click here to sign in
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={undefined}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <LoginSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <LoginFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Sign in details
              </PopupHeader>,
              <PopupContent>
                Click here to sign in
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sign in details",
              },
              "ref": null,
              "rendered": "Sign in details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign in",
              },
              "ref": null,
              "rendered": "Click here to sign in",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": undefined,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign in
                    </Header>,
                    <ReduxForm
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Don't have an account?
                       
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign in",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign in",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Don't have an account?",
                        " ",
                        <Link
                          onClick={[Function]}
                          replace={false}
                          to="/"
                        >
                          Sign up
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Don't have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign up",
                          "onClick": [Function],
                          "replace": false,
                          "to": "/",
                        },
                        "ref": null,
                        "rendered": "Sign up",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`LoginModal:index should be visible when the NavBar Login button is clicked 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginModal
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>
          }
        >
          <PopupHeader>
            Sign in details
          </PopupHeader>
          <PopupContent>
            Click here to sign in
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={undefined}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <LoginSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <LoginFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Sign in details
            </PopupHeader>,
            <PopupContent>
              Click here to sign in
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign in
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sign in details",
            },
            "ref": null,
            "rendered": "Sign in details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign in",
            },
            "ref": null,
            "rendered": "Click here to sign in",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": undefined,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>,
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign in",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign in",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Don't have an account?",
                      " ",
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Don't have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign up",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Sign up",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign in
              </Button>
            }
          >
            <PopupHeader>
              Sign in details
            </PopupHeader>
            <PopupContent>
              Click here to sign in
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={undefined}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <LoginSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <LoginFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Sign in details
              </PopupHeader>,
              <PopupContent>
                Click here to sign in
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sign in details",
              },
              "ref": null,
              "rendered": "Sign in details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign in",
              },
              "ref": null,
              "rendered": "Click here to sign in",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": undefined,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign in
                    </Header>,
                    <ReduxForm
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Don't have an account?
                       
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign in",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign in",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Don't have an account?",
                        " ",
                        <Link
                          onClick={[Function]}
                          replace={false}
                          to="/"
                        >
                          Sign up
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Don't have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign up",
                          "onClick": [Function],
                          "replace": false,
                          "to": "/",
                        },
                        "ref": null,
                        "rendered": "Sign up",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`LoginModal:index should hover correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginModal
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>
          }
        >
          <PopupHeader>
            Sign in details
          </PopupHeader>
          <PopupContent>
            Click here to sign in
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={undefined}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <LoginSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <LoginFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Sign in details
            </PopupHeader>,
            <PopupContent>
              Click here to sign in
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign in
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sign in details",
            },
            "ref": null,
            "rendered": "Sign in details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign in",
            },
            "ref": null,
            "rendered": "Click here to sign in",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": undefined,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign in
                </Header>
                <ReduxForm
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Don't have an account?
                   
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign up
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>,
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign in",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign in",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Don't have an account?",
                      " ",
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Don't have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign up",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Sign up",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign in
              </Button>
            }
          >
            <PopupHeader>
              Sign in details
            </PopupHeader>
            <PopupContent>
              Click here to sign in
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={undefined}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <LoginSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <LoginFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Sign in details
              </PopupHeader>,
              <PopupContent>
                Click here to sign in
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign in
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sign in details",
              },
              "ref": null,
              "rendered": "Sign in details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign in",
              },
              "ref": null,
              "rendered": "Click here to sign in",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": undefined,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign in
                  </Header>
                  <ReduxForm
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Don't have an account?
                     
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign up
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign in
                    </Header>,
                    <ReduxForm
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Don't have an account?
                       
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign up
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign in",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign in",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Don't have an account?",
                        " ",
                        <Link
                          onClick={[Function]}
                          replace={false}
                          to="/"
                        >
                          Sign up
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Don't have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign up",
                          "onClick": [Function],
                          "replace": false,
                          "to": "/",
                        },
                        "ref": null,
                        "rendered": "Sign up",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
