// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterModal:index should be hidden when clicked outside the modal 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterModal
    location={
      Object {
        "state": Object {
          "modalOpen": false,
        },
      }
    }
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>
          }
        >
          <PopupHeader>
            Registration details
          </PopupHeader>
          <PopupContent>
            Click here to sign up
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <RegistrationSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <RegistrationFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Registration details
            </PopupHeader>,
            <PopupContent>
              Click here to sign up
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign up
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Registration details",
            },
            "ref": null,
            "rendered": "Registration details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign up",
            },
            "ref": null,
            "rendered": "Click here to sign up",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>,
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign up for a new account",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign up for a new account",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "location": Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    },
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Already have an account?",
                      " ",
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Already have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign in",
                        "href": "/login",
                        "replace": false,
                        "to": Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        },
                      },
                      "ref": null,
                      "rendered": "Sign in",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign up
              </Button>
            }
          >
            <PopupHeader>
              Registration details
            </PopupHeader>
            <PopupContent>
              Click here to sign up
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <RegistrationSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <RegistrationFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Registration details
              </PopupHeader>,
              <PopupContent>
                Click here to sign up
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Registration details",
              },
              "ref": null,
              "rendered": "Registration details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign up",
              },
              "ref": null,
              "rendered": "Click here to sign up",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign up for a new account
                    </Header>,
                    <ReduxForm
                      location={
                        Object {
                          "state": Object {
                            "modalOpen": false,
                          },
                        }
                      }
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Already have an account?
                       
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign up for a new account",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign up for a new account",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "location": Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      },
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Already have an account?",
                        " ",
                        <Link
                          href="/login"
                          replace={false}
                          to={
                            Object {
                              "pathname": "/login",
                              "state": Object {
                                "modalOpen": true,
                              },
                            }
                          }
                        >
                          Sign in
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Already have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign in",
                          "href": "/login",
                          "replace": false,
                          "to": Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          },
                        },
                        "ref": null,
                        "rendered": "Sign in",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`RegisterModal:index should be hidden when the Form Login button is clicked 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>
          }
        >
          <PopupHeader>
            Registration details
          </PopupHeader>
          <PopupContent>
            Click here to sign up
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   
                  Sign up for a new account
                </Header>
                <Form
                  as="form"
                  size="large"
                >
                  <Segment
                    stacked={true}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="Full name"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="E-mail address"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="lock"
                      iconPosition="left"
                      placeholder="Password"
                      type="password"
                    />
                    <FormField
                      control="select"
                      label="Account type"
                    >
                      <option
                        value="user"
                      >
                        Regular User
                      </option>
                      <option
                        value="family"
                      >
                        Family Member
                      </option>
                      <option
                        value="caregiver"
                      >
                        Caregiver
                      </option>
                      <option
                        value="provider"
                      >
                        Provider
                      </option>
                    </FormField>
                    <FormField
                      width="10"
                    >
                      <Checkbox
                        label="I agree with the terms & conditions"
                        type="checkbox"
                      />
                    </FormField>
                    <Button
                      as="button"
                      color="teal"
                      fluid={true}
                      onClick={[Function]}
                      size="large"
                    >
                      Create Account
                    </Button>
                  </Segment>
                </Form>
                <Message>
                  Already have an account? 
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Registration details
            </PopupHeader>,
            <PopupContent>
              Click here to sign up
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign up
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Registration details",
            },
            "ref": null,
            "rendered": "Registration details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign up",
            },
            "ref": null,
            "rendered": "Click here to sign up",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   
                  Sign up for a new account
                </Header>
                <Form
                  as="form"
                  size="large"
                >
                  <Segment
                    stacked={true}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="Full name"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="E-mail address"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="lock"
                      iconPosition="left"
                      placeholder="Password"
                      type="password"
                    />
                    <FormField
                      control="select"
                      label="Account type"
                    >
                      <option
                        value="user"
                      >
                        Regular User
                      </option>
                      <option
                        value="family"
                      >
                        Family Member
                      </option>
                      <option
                        value="caregiver"
                      >
                        Caregiver
                      </option>
                      <option
                        value="provider"
                      >
                        Provider
                      </option>
                    </FormField>
                    <FormField
                      width="10"
                    >
                      <Checkbox
                        label="I agree with the terms & conditions"
                        type="checkbox"
                      />
                    </FormField>
                    <Button
                      as="button"
                      color="teal"
                      fluid={true}
                      onClick={[Function]}
                      size="large"
                    >
                      Create Account
                    </Button>
                  </Segment>
                </Form>
                <Message>
                  Already have an account? 
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   
                  Sign up for a new account
                </Header>
                <Form
                  as="form"
                  size="large"
                >
                  <Segment
                    stacked={true}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="Full name"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="E-mail address"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="lock"
                      iconPosition="left"
                      placeholder="Password"
                      type="password"
                    />
                    <FormField
                      control="select"
                      label="Account type"
                    >
                      <option
                        value="user"
                      >
                        Regular User
                      </option>
                      <option
                        value="family"
                      >
                        Family Member
                      </option>
                      <option
                        value="caregiver"
                      >
                        Caregiver
                      </option>
                      <option
                        value="provider"
                      >
                        Provider
                      </option>
                    </FormField>
                    <FormField
                      width="10"
                    >
                      <Checkbox
                        label="I agree with the terms & conditions"
                        type="checkbox"
                      />
                    </FormField>
                    <Button
                      as="button"
                      color="teal"
                      fluid={true}
                      onClick={[Function]}
                      size="large"
                    >
                      Create Account
                    </Button>
                  </Segment>
                </Form>
                <Message>
                  Already have an account? 
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   
                  Sign up for a new account
                </Header>
                <Form
                  as="form"
                  size="large"
                >
                  <Segment
                    stacked={true}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="Full name"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      placeholder="E-mail address"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      fluid={true}
                      icon="lock"
                      iconPosition="left"
                      placeholder="Password"
                      type="password"
                    />
                    <FormField
                      control="select"
                      label="Account type"
                    >
                      <option
                        value="user"
                      >
                        Regular User
                      </option>
                      <option
                        value="family"
                      >
                        Family Member
                      </option>
                      <option
                        value="caregiver"
                      >
                        Caregiver
                      </option>
                      <option
                        value="provider"
                      >
                        Provider
                      </option>
                    </FormField>
                    <FormField
                      width="10"
                    >
                      <Checkbox
                        label="I agree with the terms & conditions"
                        type="checkbox"
                      />
                    </FormField>
                    <Button
                      as="button"
                      color="teal"
                      fluid={true}
                      onClick={[Function]}
                      size="large"
                    >
                      Create Account
                    </Button>
                  </Segment>
                </Form>
                <Message>
                  Already have an account? 
                  <Link
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     
                    Sign up for a new account
                  </Header>,
                  <Form
                    as="form"
                    size="large"
                  >
                    <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>
                  </Form>,
                  <Message>
                    Already have an account? 
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign in
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " ",
                      "Sign up for a new account",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "Sign up for a new account",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "form",
                    "children": <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>,
                    "size": "large",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="Full name"
                        />,
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="E-mail address"
                        />,
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="lock"
                          iconPosition="left"
                          placeholder="Password"
                          type="password"
                        />,
                        <FormField
                          control="select"
                          label="Account type"
                        >
                          <option
                            value="user"
                          >
                            Regular User
                          </option>
                          <option
                            value="family"
                          >
                            Family Member
                          </option>
                          <option
                            value="caregiver"
                          >
                            Caregiver
                          </option>
                          <option
                            value="provider"
                          >
                            Provider
                          </option>
                        </FormField>,
                        <FormField
                          width="10"
                        >
                          <Checkbox
                            label="I agree with the terms & conditions"
                            type="checkbox"
                          />
                        </FormField>,
                        <Button
                          as="button"
                          color="teal"
                          fluid={true}
                          onClick={[Function]}
                          size="large"
                        >
                          Create Account
                        </Button>,
                      ],
                      "stacked": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "control": [Function],
                          "fluid": true,
                          "icon": "user",
                          "iconPosition": "left",
                          "placeholder": "Full name",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "control": [Function],
                          "fluid": true,
                          "icon": "user",
                          "iconPosition": "left",
                          "placeholder": "E-mail address",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "control": [Function],
                          "fluid": true,
                          "icon": "lock",
                          "iconPosition": "left",
                          "placeholder": "Password",
                          "type": "password",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <option
                              value="user"
                            >
                              Regular User
                            </option>,
                            <option
                              value="family"
                            >
                              Family Member
                            </option>,
                            <option
                              value="caregiver"
                            >
                              Caregiver
                            </option>,
                            <option
                              value="provider"
                            >
                              Provider
                            </option>,
                          ],
                          "control": "select",
                          "label": "Account type",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Regular User",
                              "value": "user",
                            },
                            "ref": null,
                            "rendered": "Regular User",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Family Member",
                              "value": "family",
                            },
                            "ref": null,
                            "rendered": "Family Member",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Caregiver",
                              "value": "caregiver",
                            },
                            "ref": null,
                            "rendered": "Caregiver",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Provider",
                              "value": "provider",
                            },
                            "ref": null,
                            "rendered": "Provider",
                            "type": "option",
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <Checkbox
                            label="I agree with the terms & conditions"
                            type="checkbox"
                          />,
                          "width": "10",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "label": "I agree with the terms & conditions",
                            "type": "checkbox",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "button",
                          "children": "Create Account",
                          "color": "teal",
                          "fluid": true,
                          "onClick": [Function],
                          "size": "large",
                        },
                        "ref": null,
                        "rendered": "Create Account",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Already have an account? ",
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign in
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Already have an account? ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign in",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Sign in",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign up
              </Button>
            }
          >
            <PopupHeader>
              Registration details
            </PopupHeader>
            <PopupContent>
              Click here to sign up
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     
                    Sign up for a new account
                  </Header>
                  <Form
                    as="form"
                    size="large"
                  >
                    <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>
                  </Form>
                  <Message>
                    Already have an account? 
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Registration details
              </PopupHeader>,
              <PopupContent>
                Click here to sign up
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Registration details",
              },
              "ref": null,
              "rendered": "Registration details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign up",
              },
              "ref": null,
              "rendered": "Click here to sign up",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     
                    Sign up for a new account
                  </Header>
                  <Form
                    as="form"
                    size="large"
                  >
                    <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>
                  </Form>
                  <Message>
                    Already have an account? 
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     
                    Sign up for a new account
                  </Header>
                  <Form
                    as="form"
                    size="large"
                  >
                    <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>
                  </Form>
                  <Message>
                    Already have an account? 
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     
                    Sign up for a new account
                  </Header>
                  <Form
                    as="form"
                    size="large"
                  >
                    <Segment
                      stacked={true}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="Full name"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="user"
                        iconPosition="left"
                        placeholder="E-mail address"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        fluid={true}
                        icon="lock"
                        iconPosition="left"
                        placeholder="Password"
                        type="password"
                      />
                      <FormField
                        control="select"
                        label="Account type"
                      >
                        <option
                          value="user"
                        >
                          Regular User
                        </option>
                        <option
                          value="family"
                        >
                          Family Member
                        </option>
                        <option
                          value="caregiver"
                        >
                          Caregiver
                        </option>
                        <option
                          value="provider"
                        >
                          Provider
                        </option>
                      </FormField>
                      <FormField
                        width="10"
                      >
                        <Checkbox
                          label="I agree with the terms & conditions"
                          type="checkbox"
                        />
                      </FormField>
                      <Button
                        as="button"
                        color="teal"
                        fluid={true}
                        onClick={[Function]}
                        size="large"
                      >
                        Create Account
                      </Button>
                    </Segment>
                  </Form>
                  <Message>
                    Already have an account? 
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       
                      Sign up for a new account
                    </Header>,
                    <Form
                      as="form"
                      size="large"
                    >
                      <Segment
                        stacked={true}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="Full name"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="E-mail address"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="lock"
                          iconPosition="left"
                          placeholder="Password"
                          type="password"
                        />
                        <FormField
                          control="select"
                          label="Account type"
                        >
                          <option
                            value="user"
                          >
                            Regular User
                          </option>
                          <option
                            value="family"
                          >
                            Family Member
                          </option>
                          <option
                            value="caregiver"
                          >
                            Caregiver
                          </option>
                          <option
                            value="provider"
                          >
                            Provider
                          </option>
                        </FormField>
                        <FormField
                          width="10"
                        >
                          <Checkbox
                            label="I agree with the terms & conditions"
                            type="checkbox"
                          />
                        </FormField>
                        <Button
                          as="button"
                          color="teal"
                          fluid={true}
                          onClick={[Function]}
                          size="large"
                        >
                          Create Account
                        </Button>
                      </Segment>
                    </Form>,
                    <Message>
                      Already have an account? 
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        Sign in
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " ",
                        "Sign up for a new account",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "Sign up for a new account",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "form",
                      "children": <Segment
                        stacked={true}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="Full name"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="user"
                          iconPosition="left"
                          placeholder="E-mail address"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          fluid={true}
                          icon="lock"
                          iconPosition="left"
                          placeholder="Password"
                          type="password"
                        />
                        <FormField
                          control="select"
                          label="Account type"
                        >
                          <option
                            value="user"
                          >
                            Regular User
                          </option>
                          <option
                            value="family"
                          >
                            Family Member
                          </option>
                          <option
                            value="caregiver"
                          >
                            Caregiver
                          </option>
                          <option
                            value="provider"
                          >
                            Provider
                          </option>
                        </FormField>
                        <FormField
                          width="10"
                        >
                          <Checkbox
                            label="I agree with the terms & conditions"
                            type="checkbox"
                          />
                        </FormField>
                        <Button
                          as="button"
                          color="teal"
                          fluid={true}
                          onClick={[Function]}
                          size="large"
                        >
                          Create Account
                        </Button>
                      </Segment>,
                      "size": "large",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            fluid={true}
                            icon="user"
                            iconPosition="left"
                            placeholder="Full name"
                          />,
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            fluid={true}
                            icon="user"
                            iconPosition="left"
                            placeholder="E-mail address"
                          />,
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            fluid={true}
                            icon="lock"
                            iconPosition="left"
                            placeholder="Password"
                            type="password"
                          />,
                          <FormField
                            control="select"
                            label="Account type"
                          >
                            <option
                              value="user"
                            >
                              Regular User
                            </option>
                            <option
                              value="family"
                            >
                              Family Member
                            </option>
                            <option
                              value="caregiver"
                            >
                              Caregiver
                            </option>
                            <option
                              value="provider"
                            >
                              Provider
                            </option>
                          </FormField>,
                          <FormField
                            width="10"
                          >
                            <Checkbox
                              label="I agree with the terms & conditions"
                              type="checkbox"
                            />
                          </FormField>,
                          <Button
                            as="button"
                            color="teal"
                            fluid={true}
                            onClick={[Function]}
                            size="large"
                          >
                            Create Account
                          </Button>,
                        ],
                        "stacked": true,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "as": [Function],
                            "control": [Function],
                            "fluid": true,
                            "icon": "user",
                            "iconPosition": "left",
                            "placeholder": "Full name",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "as": [Function],
                            "control": [Function],
                            "fluid": true,
                            "icon": "user",
                            "iconPosition": "left",
                            "placeholder": "E-mail address",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "as": [Function],
                            "control": [Function],
                            "fluid": true,
                            "icon": "lock",
                            "iconPosition": "left",
                            "placeholder": "Password",
                            "type": "password",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <option
                                value="user"
                              >
                                Regular User
                              </option>,
                              <option
                                value="family"
                              >
                                Family Member
                              </option>,
                              <option
                                value="caregiver"
                              >
                                Caregiver
                              </option>,
                              <option
                                value="provider"
                              >
                                Provider
                              </option>,
                            ],
                            "control": "select",
                            "label": "Account type",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Regular User",
                                "value": "user",
                              },
                              "ref": null,
                              "rendered": "Regular User",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Family Member",
                                "value": "family",
                              },
                              "ref": null,
                              "rendered": "Family Member",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Caregiver",
                                "value": "caregiver",
                              },
                              "ref": null,
                              "rendered": "Caregiver",
                              "type": "option",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Provider",
                                "value": "provider",
                              },
                              "ref": null,
                              "rendered": "Provider",
                              "type": "option",
                            },
                          ],
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <Checkbox
                              label="I agree with the terms & conditions"
                              type="checkbox"
                            />,
                            "width": "10",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "label": "I agree with the terms & conditions",
                              "type": "checkbox",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "button",
                            "children": "Create Account",
                            "color": "teal",
                            "fluid": true,
                            "onClick": [Function],
                            "size": "large",
                          },
                          "ref": null,
                          "rendered": "Create Account",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Already have an account? ",
                        <Link
                          onClick={[Function]}
                          replace={false}
                          to="/"
                        >
                          Sign in
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Already have an account? ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign in",
                          "onClick": [Function],
                          "replace": false,
                          "to": "/",
                        },
                        "ref": null,
                        "rendered": "Sign in",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`RegisterModal:index should be visible when the NavBar Login button is clicked 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterModal
    location={
      Object {
        "state": Object {
          "modalOpen": false,
        },
      }
    }
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>
          }
        >
          <PopupHeader>
            Registration details
          </PopupHeader>
          <PopupContent>
            Click here to sign up
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <RegistrationSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <RegistrationFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Registration details
            </PopupHeader>,
            <PopupContent>
              Click here to sign up
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign up
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Registration details",
            },
            "ref": null,
            "rendered": "Registration details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign up",
            },
            "ref": null,
            "rendered": "Click here to sign up",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>,
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign up for a new account",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign up for a new account",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "location": Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    },
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Already have an account?",
                      " ",
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Already have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign in",
                        "href": "/login",
                        "replace": false,
                        "to": Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        },
                      },
                      "ref": null,
                      "rendered": "Sign in",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign up
              </Button>
            }
          >
            <PopupHeader>
              Registration details
            </PopupHeader>
            <PopupContent>
              Click here to sign up
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <RegistrationSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <RegistrationFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Registration details
              </PopupHeader>,
              <PopupContent>
                Click here to sign up
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Registration details",
              },
              "ref": null,
              "rendered": "Registration details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign up",
              },
              "ref": null,
              "rendered": "Click here to sign up",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign up for a new account
                    </Header>,
                    <ReduxForm
                      location={
                        Object {
                          "state": Object {
                            "modalOpen": false,
                          },
                        }
                      }
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Already have an account?
                       
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign up for a new account",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign up for a new account",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "location": Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      },
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Already have an account?",
                        " ",
                        <Link
                          href="/login"
                          replace={false}
                          to={
                            Object {
                              "pathname": "/login",
                              "state": Object {
                                "modalOpen": true,
                              },
                            }
                          }
                        >
                          Sign in
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Already have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign in",
                          "href": "/login",
                          "replace": false,
                          "to": Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          },
                        },
                        "ref": null,
                        "rendered": "Sign in",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`RegisterModal:index should hover correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterModal
    location={
      Object {
        "state": Object {
          "modalOpen": false,
        },
      }
    }
    mutate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Popup
          on="hover"
          position="top left"
          trigger={
            <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>
          }
        >
          <PopupHeader>
            Registration details
          </PopupHeader>
          <PopupContent>
            Click here to sign up
          </PopupContent>
        </Popup>,
        <Modal
          basic={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          size="small"
        >
          <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>
        </Modal>,
        <RegistrationSuccessModal
          handleClose={[Function]}
          successModalOpen={false}
        />,
        <RegistrationFailureModal
          errors={Array []}
          handleClose={[Function]}
          successModalOpen={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PopupHeader>
              Registration details
            </PopupHeader>,
            <PopupContent>
              Click here to sign up
            </PopupContent>,
          ],
          "on": "hover",
          "position": "top left",
          "trigger": <Button
            as="button"
            onClick={[Function]}
          >
            Sign up
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Registration details",
            },
            "ref": null,
            "rendered": "Registration details",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Click here to sign up",
            },
            "ref": null,
            "rendered": "Click here to sign up",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "basic": true,
          "children": <ModalContent>
            <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>
          </ModalContent>,
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "size": "small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              style={
                Object {
                  "height": "100%",
                }
              }
              textAlign="center"
              verticalAlign="middle"
            >
              <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>
            </Grid>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                style={
                  Object {
                    "maxWidth": 450,
                  }
                }
              >
                <Header
                  as="h2"
                  color="teal"
                  textAlign="center"
                >
                  <Image
                    as="img"
                    src="/img/logo.png"
                    ui={true}
                  />
                   Sign up for a new account
                </Header>
                <ReduxForm
                  location={
                    Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    }
                  }
                  mutate={[Function]}
                  onSubmit={[Function]}
                />
                <Message>
                  Already have an account?
                   
                  <Link
                    href="/login"
                    replace={false}
                    to={
                      Object {
                        "pathname": "/login",
                        "state": Object {
                          "modalOpen": true,
                        },
                      }
                    }
                  >
                    Sign in
                  </Link>
                </Message>
              </GridColumn>,
              "style": Object {
                "height": "100%",
              },
              "textAlign": "center",
              "verticalAlign": "middle",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>,
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />,
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>,
                ],
                "style": Object {
                  "maxWidth": 450,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h2",
                    "children": Array [
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />,
                      " Sign up for a new account",
                    ],
                    "color": "teal",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "src": "/img/logo.png",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Sign up for a new account",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "location": Object {
                      "state": Object {
                        "modalOpen": false,
                      },
                    },
                    "mutate": [Function],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Already have an account?",
                      " ",
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Already have an account?",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign in",
                        "href": "/login",
                        "replace": false,
                        "to": Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        },
                      },
                      "ref": null,
                      "rendered": "Sign in",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errors": Array [],
          "handleClose": [Function],
          "successModalOpen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Popup
            on="hover"
            position="top left"
            trigger={
              <Button
                as="button"
                onClick={[Function]}
              >
                Sign up
              </Button>
            }
          >
            <PopupHeader>
              Registration details
            </PopupHeader>
            <PopupContent>
              Click here to sign up
            </PopupContent>
          </Popup>,
          <Modal
            basic={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            size="small"
          >
            <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>
          </Modal>,
          <RegistrationSuccessModal
            handleClose={[Function]}
            successModalOpen={false}
          />,
          <RegistrationFailureModal
            errors={Array []}
            handleClose={[Function]}
            successModalOpen={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PopupHeader>
                Registration details
              </PopupHeader>,
              <PopupContent>
                Click here to sign up
              </PopupContent>,
            ],
            "on": "hover",
            "position": "top left",
            "trigger": <Button
              as="button"
              onClick={[Function]}
            >
              Sign up
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Registration details",
              },
              "ref": null,
              "rendered": "Registration details",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Click here to sign up",
              },
              "ref": null,
              "rendered": "Click here to sign up",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "basic": true,
            "children": <ModalContent>
              <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>
            </ModalContent>,
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "size": "small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Grid
                style={
                  Object {
                    "height": "100%",
                  }
                }
                textAlign="center"
                verticalAlign="middle"
              >
                <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>
              </Grid>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  style={
                    Object {
                      "maxWidth": 450,
                    }
                  }
                >
                  <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
                  >
                    <Image
                      as="img"
                      src="/img/logo.png"
                      ui={true}
                    />
                     Sign up for a new account
                  </Header>
                  <ReduxForm
                    location={
                      Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      }
                    }
                    mutate={[Function]}
                    onSubmit={[Function]}
                  />
                  <Message>
                    Already have an account?
                     
                    <Link
                      href="/login"
                      replace={false}
                      to={
                        Object {
                          "pathname": "/login",
                          "state": Object {
                            "modalOpen": true,
                          },
                        }
                      }
                    >
                      Sign in
                    </Link>
                  </Message>
                </GridColumn>,
                "style": Object {
                  "height": "100%",
                },
                "textAlign": "center",
                "verticalAlign": "middle",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h2"
                      color="teal"
                      textAlign="center"
                    >
                      <Image
                        as="img"
                        src="/img/logo.png"
                        ui={true}
                      />
                       Sign up for a new account
                    </Header>,
                    <ReduxForm
                      location={
                        Object {
                          "state": Object {
                            "modalOpen": false,
                          },
                        }
                      }
                      mutate={[Function]}
                      onSubmit={[Function]}
                    />,
                    <Message>
                      Already have an account?
                       
                      <Link
                        href="/login"
                        replace={false}
                        to={
                          Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          }
                        }
                      >
                        Sign in
                      </Link>
                    </Message>,
                  ],
                  "style": Object {
                    "maxWidth": 450,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h2",
                      "children": Array [
                        <Image
                          as="img"
                          src="/img/logo.png"
                          ui={true}
                        />,
                        " Sign up for a new account",
                      ],
                      "color": "teal",
                      "textAlign": "center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": "img",
                          "src": "/img/logo.png",
                          "ui": true,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Sign up for a new account",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "location": Object {
                        "state": Object {
                          "modalOpen": false,
                        },
                      },
                      "mutate": [Function],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Already have an account?",
                        " ",
                        <Link
                          href="/login"
                          replace={false}
                          to={
                            Object {
                              "pathname": "/login",
                              "state": Object {
                                "modalOpen": true,
                              },
                            }
                          }
                        >
                          Sign in
                        </Link>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Already have an account?",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign in",
                          "href": "/login",
                          "replace": false,
                          "to": Object {
                            "pathname": "/login",
                            "state": Object {
                              "modalOpen": true,
                            },
                          },
                        },
                        "ref": null,
                        "rendered": "Sign in",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Array [],
            "handleClose": [Function],
            "successModalOpen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
